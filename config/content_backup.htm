<h1>about</h1>
<p>四設計二甲</p>
<p>40823110 張昀棨</p>
<p></p>
<p>cd2021</p>
<p>個人倉儲:<a href="https://github.com/40823110/cd2021"></a><a href="https://github.com/40823110/cd2021">github</a></p>
<p>團隊網站:<span> </span><a href="https://40823152.github.io/stage1-ag21/">stage1-ag21</a></p>
<p><a href="https://40823153.github.io/stage1-ag21/content/index.html">stage1-ag21 (備用)</a></p>
<p>團隊倉儲:<span> <a href="https://github.com/40823152/stage1-ag21">stage1-ag21</a>(主)</span></p>
<p><a href="https://github.com/40823153/stage1-ag21">stage1-ag21(備用)</a></p>
<hr/>
<p>小組網頁:<a href="https://github.com/40823152/cp2020bg3">40823152cp2020bg3</a></p>
<p></p>
<p>cad2020</p>
<p>個人倉儲:<a href="https://github.com/40823110/cad2020">github</a></p>
<p>個人網頁:<a href="https://40823110.github.io/cad2020/content/index.html">40823110cad2020</a></p>
<p><br/> <a href="/get_page/About/W1-W4.html">Next</a> &gt;&gt; W1-W4</p><h1>每周學習進度</h1>
<p><br/><br/><a href="https://cad.onshape.com/documents/5163181e2fe649a1d31dd674/w/4e88bfbfabd294ec7f2f2b4d/e/697be15fa1b7438b20521146"></a></p>
<h2>W3進度</h2>
<p>onshape 零件圖</p>
<p>軸承零件</p>
<p><a href="https://cad.onshape.com/documents/0bfc2dc1ec6f4ab23ac54ffe/w/0dfb2b29b00da67b3c1974c6/e/0de22abfa577bb4913cc1c05">https://cad.onshape.com/documents/0bfc2dc1ec6f4ab23ac54ffe/w/0dfb2b29b00da67b3c1974c6/e/0de22abfa577bb4913cc1c05</a><br/><a href='/get_page/W3%E9%80%B2%E5%BA%A6/"https:/cad.onshape.com/documents/0bfc2dc1ec6f4ab23ac54ffe/w/0dfb2b29b00da67b3c1974c6/e/0de22abfa577bb4913cc1c05&lt;/a'></a></p>
<p>引球員盤</p>
<p><a href="https://cad.onshape.com/documents/0e376e65b8e53e50798db3f8/w/38fdbe7da426bcea827d31f5/e/c8220b94c818dc32174f27da">https://cad.onshape.com/documents/0e376e65b8e53e50798db3f8/w/38fdbe7da426bcea827d31f5/e/c8220b94c818dc32174f27da</a></p>
<p>主體</p>
<p><a href="https://cad.onshape.com/documents/6b80403679e6d564d3030ea0/w/e8e6dda875cffa2431ab0d92/e/adac81874f58c0e7f7c82a05">https://cad.onshape.com/documents/6b80403679e6d564d3030ea0/w/e8e6dda875cffa2431ab0d92/e/adac81874f58c0e7f7c82a05</a></p>
<p>底座+球桶</p>
<p><a href="https://cad.onshape.com/documents/e7f83d8dad44353fefca9ba8/w/c9bfde151271f69c6a6a2b1d/e/dfcfbb7a2da4266f925ff71c">https://cad.onshape.com/documents/e7f83d8dad44353fefca9ba8/w/c9bfde151271f69c6a6a2b1d/e/dfcfbb7a2da4266f925ff71c</a></p>
<p>組合圖</p>
<p><a href="https://cad.onshape.com/documents/5163181e2fe649a1d31dd674/w/4e88bfbfabd294ec7f2f2b4d/e/58709a4788fea2051cd57dec">https://cad.onshape.com/documents/5163181e2fe649a1d31dd674/w/4e88bfbfabd294ec7f2f2b4d/e/58709a4788fea2051cd57dec</a></p>
<h2>W4進度</h2>
<h3>ssh</h3>
<p>SSH 指 Secure SHell, 是一種網路連線加密機制, 當我們在 Mac OS 或 Linux 操作系統中的 Terminal 或 XTerm 時, 可以利用 ssh 帳號@遠端主機 ip 或符號名稱, 就可以輸入認證密碼, 登入到遠端主機.</p>
<p>一般針對公開的 Github 倉儲, 任何人都可以直接透過 https 協定 clone 倉儲, 無需認證, 但是倉儲協同者若要從近端將改版資料送到 Github, 就必須通過認證, 假如採 https 協定, 則倉儲協同者在推送改版資料時, 必須提供帳號與密碼.</p>
<p>除了 https 協定, Github 也接受倉儲的協同者以 SSH 連線的方式, git clone private 倉儲, 或以 SSH 連線的方式將近端改版資料推送到遠端倉儲.</p>
<p>SSH 的連線加密機制依賴 private key 與 public key 之間的配對, 當使用者建立 SSH key pair 時, private key 必須保護在近端, 而 public key 則必須送到進行認證的遠端伺服器中.</p>
<h4>建立 OpenSSH key pair</h4>
<p>Github 伺服器所支援的 SSH 為 OpenSSH 檔案格式的協定, 因此使用者要送到 Github 伺服器上的 OpenSSH 格式 public key, 可以透過 portablegit 中的 sh.exe 進入 SHell, 然後利用以下指令建立採 <a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem)">rsa</a> 加密演算法的 key pair:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p>在 -C 後的使用者學號字串, 會直接附加在 OpenSSH public key 檔案的最後端, 讓使用者得以辨識 public key 的對應使用者, 而所建立的 OpenSSH private key 則可以透過 puttygen 轉換為 putty 特有檔案格式.</p>
<h4>Putty 作為 SSH 連線客戶端工具</h4>
<p>Putty 套件可用於 Windows 與 Linux 操作系統, 可以讓使用者以 SSH 加密機制遠端登入到其他伺服器主機, 由於電腦輔助設計室電腦的第三磁區上課時會轉為純 IPv6 協定上網, 當使用者要將近端改版資料推送到遠端時, 由於 Github 至今仍只支援 IPv4 網路協定, 因此無論是以 https 或 ssh 方式連線, 都必須透過能同時支援 IPv4 與 IPv6 的代理主機.</p>
<p>以 https 協定對 Github 連線的代理主機設定位於 home/.gitconfig, 而在 Windows 10 操作系統中採 SSH 對 Github 連線, 就必須將代理主機與 private key 的設定, 透過 Putty 完成.</p>
<h4>以 SSH 協定與 Github 連線</h4>
<p>1. 建立一對 OpenSSH key pair, private key 保留在近端, 將 public key 登記在 Github 所屬帳號設定中.</p>
<p>2. 近端可攜系統啟動時, 必須確認已經設定</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p>表示 git 將透過 putty 工具以 ssh 加密協定對 Github 連線</p>
<p>3. 在 Putty 中設定對 github.com ssh 時必須提供的 Proxy 代理主機設定與 Auth 認證所需的近端 private key, 而且必須利用 puttygen 將 OpenSSH 格式轉為 putty 檔案格式</p>
<p>4. 無論在 git clone 或 git push (URL 位於倉儲 .git/config 中), URL 必須使用 <a href="mailto:git@github.com:帳號/倉儲名稱.git">git@github.com:帳號/倉儲名稱.git</a> 連線</p>
<h4>利用 SSH 對 Gitlab 連線</h4>
<ol>
<li>首先必須要將 OpenSSH 格式的 public key 登錄到 Gitlab 帳號下</li>
<li>確定已經利用 putty.exe 建立 session 名稱為 gitlab.com 的設定, 其中設定 AUTH 與 Proxy 資料</li>
<li>修改各倉儲中 .git/config 的 gitlab remote add 設定, 以 url = git@gitlab.com:user_name/url 對 gitlab 連接.</li>
</ol>
<p></p>
<p><br/>Network &lt;&lt; <a href="/get_page/ssh/Network.html">Previous</a> <a href="/get_page/ssh/OpenSSH.html">Next</a> &gt;&gt; OpenSSH</p>
<!-- footer -->
<div class="container">
<div class="row pt-3 mx-auto">
<p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> Copyright ©
<script>
document.write(new Date().getFullYear());
</script>
All rights reserved | This template is made with <i aria-hidden="true" class="icon-heart"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a> <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
</div>
</div>
<!-- for footer -->
<p></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="../cmsimde/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/get_page/cmsimde/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery-ui.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/popper.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/bootstrap.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/owl.carousel.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/aos.js"></script>
<!--
            <script src="../cmsimde/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/get_page/cmsimde/static/chimper/js/main.js"></script>
<!-- 啟用 LaTeX equations 編輯 -->
<p></p>
<!-- <script>
  MathJax = {
    tex: {inlineMath: [['$', '$'], ['\(', '\)']]}
  };
  </script>
  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>-->
<p></p>
<h3>更新cmsimde</h3>
<p>進到cmsimde檔案裡輸入下指令合併更新版本</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git pull
</pre>
<p></p>
<p>到up_dir複製一分到cd2021合併資料即可更新完成</p>
<p>接著在命令列輸入cms檢查是否更新完成</p>
<p>若成功將會執行 python wsgi.py</p>
<h2>w5</h2>
<h3>產品目標</h3>
<p>主題:籃球機 二代</p>
<p></p>
<p>動機:</p>
<p>第一次小組產品的籃球機只能自己轉動無法控制，所以二代的籃球機目標增加案件控制轉動。</p>
<p></p>
<p>製作規劃:</p>
<p>w5:確認主題，工作分配</p>
<p></p>
<p>w6:尋找lua程式與<span>coppeliaSim 文章</span>，並且使用lua程式控制軸在coppeliaSim裡模擬，籃球機外觀修整。</p>
<p></p>
<p>w7:完成按鍵控制程式與模擬<span>，籃球機外觀修整。</span></p>
<p><span></span></p>
<p>w8:除錯與修整，完成簡報與pdf</p>
<p></p>
<p>w9:報告</p>
<h3>工作分配</h3>
<p>40823152:coppeliaSim 模擬 ，程式設計，尋找資料</p>
<p>40822310:<span>程式設計，尋找資料</span></p>
<p>40823125:機構設計，尋找資料，簡報製作，heroku創建</p>
<p>40823153:Inventor 畫圖 ，<span>coppeliaSim 模擬</span></p>
<h2>w6</h2>
<h3>Lua資料</h3>
<p><span>使用lua控制軸的轉速</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
     joint=sim.getObjectHandle('Revolute_joint')
     sim.sJointTargetVelocity(joint,5.5)</pre>
<p>介紹:</p>
<p>1. 設joint 為轉軸</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">	
joint=sim.getObjectHandle('Revolute_joint')</pre>
<p>2.設<span>joint 的</span>速度</p>
<p>呼叫對話框參考資料</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simGetDialogInput.htm">https://www.coppeliarobotics.com/helpFiles/en/regularApi/simGetDialogInput.htm</a></p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simGetDialogResult.htm">https://www.coppeliarobotics.com/helpFiles/en/regularApi/simGetDialogResult.htm</a></p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simDisplayDialog.htm">https://www.coppeliarobotics.com/helpFiles/en/regularApi/simDisplayDialog.htm</a></p>
<div>
<p></p>
</div>
<h2>w7</h2>
<h3>keyboard control</h3>
<p><span>使用keyboard</span><span> 控制軸的啟動</span></p>
<p><span>lua程式碼</span></p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
     joint=sim.getObjectHandle('Revolute_joint')
     sim.sJointTargetVelocity(joint,5.5)
     number=-10
      
      
  
 
 
end
 
function sysCall_actuation()
 message,auxiliaryData=sim.getSimulatorMessage()
 if (message==sim.message_keypress) then
      if (auxiliaryData[1]==2007) then
      sim.setJointTargetVelocity(joint,number)
      end
      if (auxiliaryData[1]==2008) then
      sim.setJointTargetVelocity(joint,0)
      end
 end   
 
 
end</pre>
<p><span>1.定義2個參數為sim.getSimulatorMessage()</span></p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">	
message,auxiliaryData=sim.getSimulatorMessage()</pre>
<p><span>2.當參數為鍵盤up按鍵，使軸轉number的速度</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">if (message==sim.message_keypress) then
     if (auxiliaryData[1]==2007) then
     sim.setJointTargetVelocity(joint,number)
     end
</pre>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/A5Ws3gGDpjc" width="560"></iframe>&lt;h2&gt;w8&lt;/h2&gt;</p>
<p>&lt;h3&gt;basketball Machine 2.4.3&lt;/h3&gt;</p>
<p></p>
<h2>w8</h2>
<h3>basketball Machine 2.4.3</h3>
<p><span>1.擊球桿新增後轉功能，可以有效控制擊球的時機</span></p>
<p><span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/R4FlyPlJxqw" width="560"></iframe></p>
<p><br/>Inquire keyboard number &lt;&lt; <a href="/get_page/basketball%20Machine%202.4.3/Inquire keyboard number.html">Previous</a> <a href="/get_page/basketball%20Machine%202.4.3/stage1-product.html">Next</a> &gt;&gt; stage1-product</p>